{#
/**
 * @file
 * Content Type Team Consum
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}

{%
  set classes = [
    'node',
    'team-consum',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
  ]
%}

<article{{ attributes.addClass(classes) }}>

  <div class="content">
    <div class="row">
      <div class="col-12 team-content-1">
        {{ title_prefix }}
        {{ title_suffix }} 
    
        {% block content %}
          {% if page %}
            <h2 class="font-weight-bold mb-3">
              {{ label }} 
            </h2>
          {% endif %}    
          {% if content.field_subtitle %}
            <div class="font-italic mb-5">
              {{ content.field_subtitle }}
            </div>
          {% endif %}

          <div class="team-category">
            {% if content.field_actividad_team_consum %}
                {{ content.field_actividad_team_consum }}
            {% endif %}
            {% if content.field_edad_team_consum %}
                {{ content.field_edad_team_consum }}
            {% endif %}
            {% if content.field_tematica_team_consum  %}
                {{ content.field_tematica_team_consum  }}
            {% endif %}
          </div>

        </div>
      </div>
    </div>

    
      {{ content.field_image }}
    <div class="row pasos-team-consum">
        {% if content.field_pasos_team_consum[0] %}
          {% for key, item in node.field_pasos_team_consum if key|first != '#' %}
              <div class="col-md-3">
                <div class="paso-team-consum">
                  <img src="/themes/custom/consum_es/assets/img/tc-{{ item.value }}.png" alt="{{ item.value }}" >
                  {% set counter = ( counter | default(0) ) + 1 %}
                  <h6>{{ counter }}.  {{ content.field_pasos_team_consum[counter - 1] }}</h6>
                </div>
              </div>
          {% endfor %}
        {% endif %}
    </div>

    
<div class="content">
    <div class="row">
      <div class="col-12 team-content-2">


        <div{{ content_attributes }}>
        



          {{ content.body }}
        </div>
      
        <div class="mt-5">
          {{ content.field_bloque_2 }}

          {{ content.field_contenido_descargable }}

          {{ content.field_enlaces_de_descarga }}
        </div>
      {% endblock %}

     {# 
      {% block comments %}
        <div class="text-center count-comments">
            <span class="btn-ci ci-comentario"></span>
            <span> Comentarios </span>
            {% if content.field_comments.0.comments|length > 0 %}
                <span>({{ content.field_comments.0.comments|length -3 }})</span>
            {% else %}
                <span> (0)</span>
            {% endif %}
        </div>
        <div class="mt-5">
          {{ content.field_comments }}
        </div>
      {% endblock %}
    #}

      </div>
    </div>
  </div>
</article>



