<?php

use Drupal\consum_iam_mdm\EntityHelperMDM;
use Drupal\Core\Form\FormState;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_form_FORM_ID_alter()
 */
function consum_iam_mdm_form_user_register_form_alter(&$form, FormState $form_state, $form_id) {
  $form['actions']['submit']['#submit'][] = '_consum_iam_mdm_form_user_register_form_submit';
}

/**
 * Submit for user register form.
 */
function _consum_iam_mdm_form_user_register_form_submit(array &$form, FormState $form_state) {
  $userId = $form_state->getValue('uid');
  if (!empty($userId)) {
    $helper = new EntityHelperMDM();
    $user = $helper->getUserByField('uid', $form_state->getValue('uid'));
    $helper->sendUsuarioNuevo($user);
  }
}

/*
 * Implements hook_entity_update().
 *
function consum_iam_mdm_entity_update(EntityInterface $entity) {
  if (empty(Drupal::request()->request->get('userInfo'))) {

    if ($entity->getEntityTypeId() == 'user') {
      if (\Drupal::routeMatch()->getRouteName() == 'entity.webform.canonical') {
        if (\Drupal::routeMatch()->getParameter('webform')->id() != 'registro_de_socio_cliente') {
          $helper = new EntityHelperMDM();
          $helper->sendUsuarioModificado($entity, 'modificarUsuario');
        }
      }
    }

    if ($entity->bundle() == 'direccion') {
      $helper = new EntityHelperMDM();
      $changesDireccion = $helper->entityHasChanged($entity);
      if (!empty($changesDireccion)) {
        $changesDireccionParsed = $helper->parseDireccion($entity);
        $helper->sendDireccionModificada($entity, $changesDireccionParsed, 'modificarUsuario');
      }
    }
  }
}*/

/**
 * Implements hook_entity_delete().
 */
function consum_iam_mdm_entity_delete(EntityInterface $entity) {
  if (empty(Drupal::request()->request->get('userInfo'))) {
    if ($entity->getEntityTypeId() == 'user') {
      $helper = new EntityHelperMDM();
      $helper->sendUsuarioBorrado($entity);
    }
  }
}
