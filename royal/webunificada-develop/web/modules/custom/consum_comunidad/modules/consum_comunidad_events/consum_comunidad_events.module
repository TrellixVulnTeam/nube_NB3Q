<?php

use Drupal\comment\Entity\Comment;
use Drupal\consum_comunidad_events\EventsTrait;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;
use Drupal\user\Entity\User;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_node_insert().
 */
function consum_comunidad_events_node_insert(Node $node) {
  if (($node->getType() == 'receta') && ($node->isPublished())) {
    $user = User::load(\Drupal::currentUser()->id());
    $message = 'The user ' . $user->get('field_nombre')->getString() . ' ' . $user->get('field_apellido1')->getString() . ' has created a new recipe.';
    EventsTrait::setContentEvent($node, $message);
  }
}

/**
 * Implements hook_node_update().
 */
function consum_comunidad_events_node_update(Node $node) {
  if (($node->getType() == 'receta') && ($node->isPublished())) {
    $user = User::load(\Drupal::currentUser()->id());
    $message = 'The user ' . $user->get('field_nombre')->getString() . ' ' . $user->get('field_apellido1')->getString() . ' has created a new recipe.';
    EventsTrait::setContentEvent($node, $message);
  }
}

/**
 * Implements hook_comment_insert().
 */
function consum_comunidad_events_comment_insert(Comment $entity) {
  $node = $entity->getCommentedEntity();
  $user = User::load(\Drupal::currentUser()->id());
  $message = 'The user ' . $user->get('field_nombre')->getString() . ' ' . $user->get('field_apellido1')->getString() . ' has created a new comment on ' . $node->label();
  EventsTrait::setCommentEvent($entity, $message);
}

/*
 * Implements hook_views_pre_view().
 */
function consum_comunidad_events_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() == 'my_community_follow_users' && $display_id == 'block_2') {
    $user = User::load(\Drupal::currentUser()->id());
    $args[0] = $user->id();
    foreach($user->get('field_siguiendo')->getValue() as $following) {
      $args[0] .= ',' . $following['target_id'];
    }
  }
}